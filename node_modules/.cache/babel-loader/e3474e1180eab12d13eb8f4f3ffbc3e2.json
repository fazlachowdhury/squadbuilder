{"ast":null,"code":"import _ from 'lodash';\nexport function generateSquads(playerList, squads) {\n  const playerLimit = Math.floor(playerList.length / squads);\n  let squadShootingAve = [];\n  let squadSkatingAve = [];\n  let squadCheckingAve = [];\n  console.log('check$$$$', playerLimit, squads);\n  let tempSquad = [];\n\n  for (let i = 0; i < squads; i++) {\n    tempSquad.push([]);\n  }\n\n  console.log('tempSquad1', tempSquad);\n  let counter = 0;\n\n  _.each(playerList, player => {\n    let playerStrongestSkill = player.skills.reduce(function (prev, curr) {\n      return prev.rating > curr.rating ? prev : curr;\n    }); //Fill the empty squads first.\n\n    if (counter < squads && tempSquad[counter].length == 0) {\n      tempSquad[counter].push(player);\n      squadShootingAve[counter].push(parseInt(player.skills[0].rating));\n      squadSkatingAve[counter].push(parseInt(player.skills[1].rating));\n      squadCheckingAve[counter].push(parseInt(player.skills[2].rating));\n      counter++;\n    } else {// //add the player to the squad that has the smallest average for that skills\n      // _.each(tempSquad, (squad) => {\n      //\n    }\n  });\n\n  console.log('tempSquad', tempSquad);\n}","map":{"version":3,"sources":["C:\\SquadBuilder\\squadbuilder\\src\\utils\\index.js"],"names":["_","generateSquads","playerList","squads","playerLimit","Math","floor","length","squadShootingAve","squadSkatingAve","squadCheckingAve","console","log","tempSquad","i","push","counter","each","player","playerStrongestSkill","skills","reduce","prev","curr","rating","parseInt"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAO,SAASC,cAAT,CAAwBC,UAAxB,EAAoCC,MAApC,EAA4C;AAC/C,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,UAAU,CAACK,MAAX,GAAmBJ,MAA9B,CAApB;AACA,MAAIK,gBAAgB,GAAG,EAAvB;AACA,MAAIC,eAAe,GAAG,EAAtB;AACA,MAAIC,gBAAgB,GAAG,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,WAAzB,EAAsCD,MAAtC;AACA,MAAIU,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAEX,MAAnB,EAA2BW,CAAC,EAA5B,EAAgC;AAC5BD,IAAAA,SAAS,CAACE,IAAV,CAAe,EAAf;AACH;;AACDJ,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,SAA1B;AAEA,MAAIG,OAAO,GAAG,CAAd;;AAEAhB,EAAAA,CAAC,CAACiB,IAAF,CAAOf,UAAP,EAAoBgB,MAAD,IAAY;AAE7B,QAAIC,oBAAoB,GAAGD,MAAM,CAACE,MAAP,CAAcC,MAAd,CAAqB,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACjE,aAAOD,IAAI,CAACE,MAAL,GAAcD,IAAI,CAACC,MAAnB,GAA4BF,IAA5B,GAAmCC,IAA1C;AACH,KAF0B,CAA3B,CAF6B,CAM7B;;AACA,QAAGP,OAAO,GAAGb,MAAV,IAAoBU,SAAS,CAACG,OAAD,CAAT,CAAmBT,MAAnB,IAA6B,CAApD,EAAsD;AAClDM,MAAAA,SAAS,CAACG,OAAD,CAAT,CAAmBD,IAAnB,CAAwBG,MAAxB;AACAV,MAAAA,gBAAgB,CAACQ,OAAD,CAAhB,CAA0BD,IAA1B,CAA+BU,QAAQ,CAACP,MAAM,CAACE,MAAP,CAAc,CAAd,EAAiBI,MAAlB,CAAvC;AACAf,MAAAA,eAAe,CAACO,OAAD,CAAf,CAAyBD,IAAzB,CAA8BU,QAAQ,CAACP,MAAM,CAACE,MAAP,CAAc,CAAd,EAAiBI,MAAlB,CAAtC;AACAd,MAAAA,gBAAgB,CAACM,OAAD,CAAhB,CAA0BD,IAA1B,CAA+BU,QAAQ,CAACP,MAAM,CAACE,MAAP,CAAc,CAAd,EAAiBI,MAAlB,CAAvC;AACAR,MAAAA,OAAO;AACV,KAND,MAMK,CAED;AACA;AACA;AACC;AACN,GAnBD;;AAoBAL,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,SAAzB;AACH","sourcesContent":["import _ from 'lodash';\r\nexport function generateSquads(playerList, squads) {\r\n    const playerLimit = Math.floor(playerList.length/ squads);\r\n    let squadShootingAve = [];\r\n    let squadSkatingAve = [];\r\n    let squadCheckingAve = [];\r\n\r\n    console.log('check$$$$', playerLimit, squads)\r\n    let tempSquad = [];\r\n    for (let i = 0; i< squads; i++) {\r\n        tempSquad.push([])\r\n    }\r\n    console.log('tempSquad1', tempSquad);\r\n\r\n    let counter = 0;\r\n\r\n    _.each(playerList, (player) => {\r\n\r\n      let playerStrongestSkill = player.skills.reduce(function(prev, curr) {\r\n          return prev.rating > curr.rating ? prev : curr;\r\n      });\r\n\r\n      //Fill the empty squads first.\r\n      if(counter < squads && tempSquad[counter].length == 0){\r\n          tempSquad[counter].push(player);\r\n          squadShootingAve[counter].push(parseInt(player.skills[0].rating));\r\n          squadSkatingAve[counter].push(parseInt(player.skills[1].rating));\r\n          squadCheckingAve[counter].push(parseInt(player.skills[2].rating));\r\n          counter++;\r\n      }else{\r\n\r\n          // //add the player to the squad that has the smallest average for that skills\r\n          // _.each(tempSquad, (squad) => {\r\n          //\r\n          } \r\n    })\r\n    console.log('tempSquad', tempSquad);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}