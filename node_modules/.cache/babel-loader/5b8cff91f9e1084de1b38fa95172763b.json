{"ast":null,"code":"import _ from 'lodash';\nexport function generateSquads(playerList, squads) {\n  const playerLimit = Math.floor(playerList.length / squads);\n  console.log('playerLimit:', playerLimit);\n  let squadShootingSum = [],\n      squadSkatingSum = [],\n      squadCheckingSum = [];\n  let tempSquad = [];\n\n  for (let i = 0; i < squads; i++) {\n    tempSquad.push([]);\n  }\n\n  console.log('tempSquad1', tempSquad);\n  let counter = 0;\n\n  _.each(playerList, player => {\n    let playerStrongestSkill = player.skills.reduce(function (prev, curr) {\n      return prev.rating > curr.rating ? prev : curr;\n    }); //Fill the empty squads first.\n\n    if (counter < squads && tempSquad[counter].length == 0) {\n      tempSquad[counter].push(player);\n      console.log('squadShootingSum:', squadShootingSum);\n      squadShootingSum[counter] = parseInt(player.skills[0].rating);\n      squadSkatingSum[counter] = parseInt(player.skills[1].rating);\n      squadCheckingSum[counter] = parseInt(player.skills[2].rating);\n      console.log('squadShootingSum:', squadShootingSum);\n      counter++;\n    } else {\n      let squadSelected; //add the player to the squad that has the smallest average for that skills\n\n      if (playerStrongestSkill.type.toUpperCase() == \"SHOOTING\") {\n        squadSelected = squadShootingSum.indexOf(squadShootingSum.reduce(function (prev, curr) {\n          return prev < curr ? prev : curr;\n        }));\n      } else if (playerStrongestSkill.type.toUpperCase() == \"SKATING\") {\n        squadSelected = squadSkatingSum.indexOf(squadSkatingSum.reduce(function (prev, curr) {\n          return prev < curr ? prev : curr;\n        }));\n      } else {\n        squadSelected = squadCheckingSum.indexOf(squadCheckingSum.reduce(function (prev, curr) {\n          return prev < curr ? prev : curr;\n        }));\n      }\n\n      console.log('tempSquad1', tempSquad);\n      console.log('player', player);\n      console.log('squadSelected:', squadSelected); // if(typeof squadSelected !== \"undefined\"){\n      //   if(tempSquad[squadSelected].length < playerLimit){\n      //     tempSquad[squadSelected].push(player);\n      //\n      //     console.log('squadShootingSum:', squadShootingSum);\n      //\n      //     squadShootingSum[counter] = parseInt(player.skills[0].rating);\n      //     squadSkatingSum[counter] = parseInt(player.skills[1].rating);\n      //     squadCheckingSum[counter] = parseInt(player.skills[2].rating);\n      //\n      //     console.log('squadShootingSum:', squadShootingSum);\n      //   }\n      // }\n    }\n  });\n\n  console.log('tempSquad', tempSquad);\n}","map":{"version":3,"sources":["C:\\SquadBuilder\\squadbuilder\\src\\utils\\index.js"],"names":["_","generateSquads","playerList","squads","playerLimit","Math","floor","length","console","log","squadShootingSum","squadSkatingSum","squadCheckingSum","tempSquad","i","push","counter","each","player","playerStrongestSkill","skills","reduce","prev","curr","rating","parseInt","squadSelected","type","toUpperCase","indexOf"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\nexport function generateSquads(playerList, squads) {\r\n    const playerLimit = Math.floor(playerList.length/ squads);\r\n    console.log('playerLimit:', playerLimit);\r\n\r\n    let squadShootingSum = [],\r\n        squadSkatingSum = [],\r\n        squadCheckingSum = [];\r\n\r\n    let tempSquad = [];\r\n    for (let i = 0; i< squads; i++) {\r\n        tempSquad.push([])\r\n    }\r\n    console.log('tempSquad1', tempSquad);\r\n\r\n    let counter = 0;\r\n\r\n    _.each(playerList, (player) => {\r\n\r\n      let playerStrongestSkill = player.skills.reduce(function(prev, curr) {\r\n          return prev.rating > curr.rating ? prev : curr;\r\n      });\r\n\r\n      //Fill the empty squads first.\r\n      if(counter < squads && tempSquad[counter].length == 0){\r\n        tempSquad[counter].push(player);\r\n        console.log('squadShootingSum:', squadShootingSum);\r\n\r\n        squadShootingSum[counter] = parseInt(player.skills[0].rating);\r\n        squadSkatingSum[counter] = parseInt(player.skills[1].rating);\r\n        squadCheckingSum[counter] = parseInt(player.skills[2].rating);\r\n\r\n        console.log('squadShootingSum:', squadShootingSum);\r\n        counter++;\r\n      }else{\r\n         let squadSelected;\r\n          //add the player to the squad that has the smallest average for that skills\r\n          if(playerStrongestSkill.type.toUpperCase() == \"SHOOTING\"){\r\n            squadSelected = squadShootingSum.indexOf(squadShootingSum.reduce(function(prev, curr) {\r\n                return prev < curr ? prev : curr;\r\n            }));\r\n          }else if(playerStrongestSkill.type.toUpperCase() == \"SKATING\"){\r\n            squadSelected = squadSkatingSum.indexOf(squadSkatingSum.reduce(function(prev, curr) {\r\n                return prev < curr ? prev : curr;\r\n            }));\r\n          }else{\r\n            squadSelected = squadCheckingSum.indexOf(squadCheckingSum.reduce(function(prev, curr) {\r\n                return prev < curr ? prev : curr;\r\n            }));\r\n          }\r\n\r\n          console.log('tempSquad1', tempSquad);\r\n          console.log('player', player);\r\n          console.log('squadSelected:', squadSelected);\r\n\r\n          // if(typeof squadSelected !== \"undefined\"){\r\n          //   if(tempSquad[squadSelected].length < playerLimit){\r\n          //     tempSquad[squadSelected].push(player);\r\n          //\r\n          //     console.log('squadShootingSum:', squadShootingSum);\r\n          //\r\n          //     squadShootingSum[counter] = parseInt(player.skills[0].rating);\r\n          //     squadSkatingSum[counter] = parseInt(player.skills[1].rating);\r\n          //     squadCheckingSum[counter] = parseInt(player.skills[2].rating);\r\n          //\r\n          //     console.log('squadShootingSum:', squadShootingSum);\r\n          //   }\r\n          // }\r\n      }\r\n    })\r\n    console.log('tempSquad', tempSquad);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}