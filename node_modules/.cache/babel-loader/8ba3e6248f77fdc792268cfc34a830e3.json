{"ast":null,"code":"var _jsxFileName = \"C:\\\\SquadBuilder\\\\squadbuilder\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport _ from 'lodash';\nimport { Button, TextField } from '@material-ui/core';\nimport { TableComponent } from './components/TableComponent';\nimport { getPlayers } from '../src/api/getPlayers';\nimport { generateSquads } from './utils';\nimport { element } from 'prop-types';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = async () => {\n      this.setState({\n        players: await getPlayers()\n      });\n    };\n\n    this.handleOnClick = () => {\n      const tempArray = generateSquads(this.state.players, this.state.squads);\n      this.setState({\n        squadsArray: tempArray\n      });\n    };\n\n    this.resetOnClick = () => {\n      this.setState({\n        squads: 2,\n        squadsArray: []\n      });\n    };\n\n    this.renderArrayElements = val => {\n      const tempRenderer = [];\n\n      if (!_.isEmpty(this.state.squadsArray)) {\n        _.each(this.state.squadsArray, element => {\n          tempRenderer.push(React.createElement(TableComponent, {\n            id: _.uniqueId(),\n            data: element,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }));\n        });\n      }\n\n      return tempRenderer;\n    };\n\n    this.state = {\n      players: [],\n      squads: 2,\n      squadsArray: []\n    };\n  }\n\n  componentWillMount() {\n    this.getData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Squad Maker\"), React.createElement(TextField, {\n      style: {\n        width: 300\n      } // value={2}\n      ,\n      label: \"Enter Number of Squads (Default: 2)\",\n      onChange: event => {\n        this.setState({\n          squads: event.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"createSquads\",\n      style: {\n        margin: 10\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Create Squads\"), React.createElement(Button, {\n      className: \"resetSquads\",\n      style: {\n        margin: 10\n      },\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.resetOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Reset Squads\"), this.renderArrayElements());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\SquadBuilder\\squadbuilder\\src\\App.js"],"names":["React","Component","_","Button","TextField","TableComponent","getPlayers","generateSquads","element","App","constructor","props","getData","setState","players","handleOnClick","tempArray","state","squads","squadsArray","resetOnClick","renderArrayElements","val","tempRenderer","isEmpty","each","push","uniqueId","componentWillMount","render","width","event","target","value","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport _ from 'lodash';\r\nimport {Button, TextField} from '@material-ui/core';\r\nimport {TableComponent} from './components/TableComponent';\r\nimport {getPlayers} from '../src/api/getPlayers'\r\nimport {generateSquads} from './utils'\r\nimport { element } from 'prop-types';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      players: [],\r\n      squads:  2,\r\n      squadsArray: []\r\n    }\r\n  }\r\ncomponentWillMount() {\r\n  this.getData();\r\n}\r\n  getData = async () => {\r\n    this.setState({\r\n      players: await getPlayers()\r\n    })\r\n  }\r\n\r\n  //Handles Create Squad button click event\r\n  handleOnClick = () => {\r\n    const tempArray = generateSquads(this.state.players, this.state.squads);\r\n    this.setState({\r\n      squadsArray: tempArray\r\n    })\r\n\r\n  }\r\n\r\n  //Handles Reset Squad button click event\r\n  resetOnClick = () => {\r\n    this.setState({\r\n        squads: 2,\r\n        squadsArray: []\r\n    })\r\n  }\r\n\r\n  renderArrayElements = (val) => {\r\n    const tempRenderer = [];\r\n    if (!_.isEmpty(this.state.squadsArray)) {\r\n      _.each(this.state.squadsArray, (element) => {\r\n        tempRenderer.push(<TableComponent id={_.uniqueId()} data={element}/>)\r\n      })\r\n    }\r\n   return tempRenderer\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n          <h1>Squad Maker</h1>\r\n          <TextField\r\n            style={{width: 300}}\r\n            // value={2}\r\n            label='Enter Number of Squads (Default: 2)'\r\n            onChange={(event) => {\r\n              this.setState({\r\n                squads: event.target.value\r\n              })\r\n            }}\r\n          />\r\n          <Button className = 'createSquads'\r\n            style={{margin: 10}}\r\n            variant='contained'\r\n            color='primary'\r\n            onClick = {this.handleOnClick}\r\n            >\r\n          Create Squads\r\n          </Button>\r\n          <Button className = 'resetSquads'\r\n            style={{margin: 10}}\r\n            variant='contained'\r\n            color='secondary'\r\n            onClick = {this.resetOnClick}\r\n            >\r\n          Reset Squads\r\n          </Button>\r\n          {this.renderArrayElements()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}